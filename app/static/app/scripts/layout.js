// Generated by CoffeeScript 1.8.0
(function() {
  var count, i, textareas;

  textareas = document.getElementsByTagName("textarea");

  count = textareas.length;

  i = 0;

  while (i < count) {
    textareas[i].onkeydown = function(e) {
      var s;
      if (e.keyCode === 9 || e.which === 9) {
        e.preventDefault();
        s = this.selectionStart;
        this.value = this.value.substring(0, this.selectionStart) + "\t" + this.value.substring(this.selectionEnd);
        this.selectionEnd = s + 1;
      }
    };
    i++;
  }

  $(document).ready(function() {
    $('textarea').autosize();
    return console.log($("textarea"));
  });

  angular.module("worldsheet").controller("LayoutCtrl", [
    "$scope", "Auth", "Alert", function($scope, Auth, Alert) {
      $scope.search = function() {
        var areas, tags;
        areas = $scope.tags_to_string($scope.areas_tags);
        tags = $scope.tags_to_string($scope.tags_tags);
        console.log(tags);
        $("input[name=areas]").val(areas);
        $("input[name=tags]").val(tags);
        console.log($("input[name=tags]").val());
        console.log("$('input[name='q']')", $("input[name='q']"));
        document.getElementById('search-form').submit();
        $("input").val("");
      };
      $scope.tags_to_string = function(input_tags) {
        var areas, tag;
        console.log("tags_to_string", input_tags);
        if (input_tags) {
          areas = [
            (function() {
              var _i, _len, _results;
              _results = [];
              for (_i = 0, _len = input_tags.length; _i < _len; _i++) {
                tag = input_tags[_i];
                _results.push(tag.text);
              }
              return _results;
            })()
          ];
          areas = areas.join(",");
          return areas;
        }
        return "";
      };
      $("input[name='q'], input[name='secret_key']").keyup(function(e) {
        if (e.which === 13) {
          $scope.search();
        }
      });
      $scope.profile = {};
      $scope.scrollTop = 0;
      angular.element($(window)).bind("scroll", function() {
        $scope.scrollTop = $(window).scrollTop();
        return $scope.$apply();
      });
      return Auth.fetch_profile().then(function(response) {
        var profile, tag;
        Auth.store_profile(response[0]);
        $scope.profile = Auth.get_profile();
        profile = $scope.profile;
        if (!profile.is_anonymous) {
          $scope.primary_area = profile.primary_area;
          if (profile.interested_areas) {
            $scope.interested_areas_array = profile.interested_areas.split(",");
            $scope.interested_areas_tags = [
              (function() {
                var _i, _len, _ref, _results;
                _ref = $scope.interested_areas_array;
                _results = [];
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  tag = _ref[_i];
                  _results.push({
                    text: tag
                  });
                }
                return _results;
              })()
            ][0];
          }
          return $scope.photo = profile.social_account_photo;
        }
      });
    }
  ]).filter("truncate", function() {
    return function(input, max) {
      return input.slice(0, max);
    };
  }).directive("transaction", [
    "Transaction", function(Transaction) {
      return {
        restrict: "A",
        scope: true,
        link: function(scope, element, attrs) {
          var transaction_id;
          transaction_id = attrs["transactionId"];
          return scope.transaction = Transaction.$find(transaction_id);
        }
      };
    }
  ]);

}).call(this);
