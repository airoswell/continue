// Generated by CoffeeScript 1.8.0
(function() {
  angular.module("continue").controller("DashBoardCtrl", [
    "$scope", "Post", "Item", "Feed", "Timeline", "Alert", "Auth", "InfiniteScroll", function($scope, Post, Item, Feed, Timeline, Alert, Auth, InfiniteScroll) {
      var infinite_scroll_feeds, infinite_scroll_items, infinite_scroll_posts, infinite_scroll_timeline;
      Alert.show_msg("Downloading your data.");
      $scope.items = Item.$search({
        num_of_records: 8
      }).$then(function() {
        this.tags_handler();
        return Alert.show_msg("Download is finished.");
      });
      $scope.layout = {
        creating_new_item: false,
        display_tab: "posts",
        show_items_search_results: false,
        loading: {
          "posts": false,
          "feeds": false,
          "timeline": false,
          "items": false
        }
      };
      $scope.items_search = function(tag) {
        Alert.show_msg("Searching...");
        $scope.layout.items_search_keyword = tag;
        $scope.layout.show_items_search_results = true;
        return $scope.items_search_results = Item.search({
          tags: tag
        });
      };
      infinite_scroll_posts = new InfiniteScroll(Post);
      infinite_scroll_posts.config({
        model_types: ["Post"],
        init_starts: $scope.numOfPosts
      });
      $scope.load_posts = function() {
        $scope.layout.loading.posts = true;
        $scope.posts = infinite_scroll_posts.load($scope.posts);
        return $scope.posts.$asPromise().then(function(response) {
          infinite_scroll_posts.success_handler(response);
          return $scope.layout.loading.posts = false;
        }, function() {
          return Alert.show_msg("All posts are downloaded ...");
        });
      };
      infinite_scroll_items = new InfiniteScroll(Item);
      infinite_scroll_items.config({
        model_types: ["Item"],
        init_starts: $scope.items.length
      });
      $scope.load_items = function() {
        $scope.layout.loading.items = true;
        $scope.items = infinite_scroll_items.load($scope.items);
        return $scope.items.$asPromise().then(function(response) {
          infinite_scroll_items.success_handler(response);
          return $scope.layout.loading.items = false;
        }, function() {
          return Alert.show_msg("All items are downloaded ...");
        });
      };
      infinite_scroll_feeds = new InfiniteScroll(Feed);
      $scope.load_feeds = function() {
        $scope.layout.loading.feeds = true;
        infinite_scroll_feeds.config({
          model_types: ["ItemEditRecord", "Post", "Item"],
          init_starts: $scope.feed_starts
        });
        $scope.feeds = infinite_scroll_feeds.load($scope.feeds);
        return $scope.feeds.$asPromise().then(function(response) {
          infinite_scroll_feeds.success_handler(response);
          return $scope.layout.loading.feeds = false;
        }, function() {
          return Alert.show_msg("All feeds are downloaded ...");
        });
      };
      infinite_scroll_timeline = new InfiniteScroll(Timeline);
      $scope.load_timeline = function() {
        $scope.layout.loading.timeline = true;
        infinite_scroll_timeline.config({
          init_starts: $scope.timeline_starts,
          model_types: ["Item", "ItemEditRecord", "ItemTransactionRecord"]
        });
        $scope.timeline = infinite_scroll_timeline.load($scope.timeline);
        return $scope.timeline.$asPromise().then(function(response) {
          infinite_scroll_timeline.success_handler(response);
          return $scope.layout.loading.timeline = false;
        }, function() {
          return Alert.show_msg("All timeline events are downloaded ...");
        });
      };
      $scope.display_tab = function(tab_name) {
        return $scope.layout.display_tab = tab_name;
      };
      $scope.scroll_to_post = function(id) {
        var top;
        top = $("#post-" + id).offset().top;
        $("html, body").animate({
          scrollTop: top - 100
        });
        return true;
      };
      $scope.create_item = function() {
        var item;
        if ($scope.layout.creating_new_item) {
          return;
        }
        $scope.layout.creating_new_item = true;
        $scope.layout.display_tab = "items";
        item = Item.$build(Item.init);
        item.is_new = true;
        $scope.items.splice(0, 0, item);
        $("html, body").animate({
          scrollTop: $("#items-display").offset().top - 100
        });
        return true;
      };
      $scope.create_post = function() {
        var post;
        if ($scope.layout.creating_new_post) {
          return;
        }
        $scope.layout.creating_new_post = true;
        post = Post.$build(Post.init);
        post.owner = Auth.get_user().user_id;
        $scope.posts.splice(0, 0, post);
        $("html, body").animate({
          scrollTop: $("#posts-display").offset().top - 100
        });
        return true;
      };
      $scope.post_create_successHandler = function(item, response) {
        $scope.layout.creating_new_post = false;
        return post.is_new = false;
      };
      $scope.post_update_successHandler = function(item, response) {
        return console.log("successfully updated the post.");
      };
      $scope.add_item = function(post) {
        return post.add_item();
      };
      return $scope.add_existing_item = function(post) {
        var item;
        item = post.add_item();
        return BottomSheet.show(item);
      };
    }
  ]);

}).call(this);
