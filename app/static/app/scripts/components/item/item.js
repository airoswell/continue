// Generated by CoffeeScript 1.8.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  angular.module("worldsheet").controller("itemCtrl", [
    "$scope", "Alert", "BulkItems", "Item", "Auth", function($scope, Alert, BulkItems, Item, Auth) {
      $scope.layout = {
        display_tab: 0
      };
      $scope.bulk_items = BulkItems.$build();
      $scope.items = [];
      $scope.items_title = [];
      $scope.items_tag = [];
      $scope.add_item = function() {
        var item;
        item = Item.$build(Item.init);
        return $scope.items.push(item);
      };
      $scope.remove = function(item) {
        var index, items;
        items = $scope.items;
        index = items.indexOf(item);
        items.splice(index, 1);
        if (index > 0) {
          return $scope.layout.display_tab = index - 1;
        } else {
          return $scope.layout.display_tab = 0;
        }
      };
      $scope.$watch("items_tag", function() {
        var item, tag, _i, _len, _ref, _ref1, _results;
        _ref = $scope.items_tag;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tag = _ref[_i];
          if (!(_ref1 = tag.text, __indexOf.call($scope.items_title, _ref1) >= 0)) {
            item = Item.$build(Item.init);
            item.title = tag.text;
            item.owner = Auth.get_profile().id;
            item.type = "normal";
            $scope.items.push(item);
            _results.push($scope.items_title.push(item.title));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }, true);
      $scope.$watch("items", function(newVal) {
        return $('textarea').autosize();
      }, true);
      $scope.is_valid = function() {
        var item, _i, _len, _ref;
        console.log($scope.items.length < 1);
        if ($scope.items.length < 1) {
          return false;
        }
        _ref = $scope.items;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          if (!item.is_valid()) {
            return false;
          }
        }
        return true;
      };
      return $scope.submit = function() {
        var item, tag, tags, tags_private, _i, _len, _ref;
        if (!$scope.is_valid()) {
          Alert.show_error("There are no items or necessary info are not provided.");
          return;
        }
        _ref = $scope.items;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          tags = [
            (function() {
              var _j, _len1, _ref1, _results;
              _ref1 = item.tags_input;
              _results = [];
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                tag = _ref1[_j];
                _results.push(tag.text);
              }
              return _results;
            })()
          ][0].join(",");
          tags_private = [
            (function() {
              var _j, _len1, _ref1, _results;
              _ref1 = item.tags_private_input;
              _results = [];
              for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                tag = _ref1[_j];
                _results.push(tag.text);
              }
              return _results;
            })()
          ][0].join(",");
          item.tags = tags;
          item.tags_private = tags_private;
        }
        $scope.bulk_items.items = $scope.items;
        Alert.show_msg("Submitting your data ...");
        return $scope.bulk_items.$save().$then(function(response) {
          console.log(response);
          Alert.show_msg("Successfully submitted your data.");
          $scope.items = [];
          return window.location.replace("/app/user/dashboard/");
        });
      };
    }
  ]);

}).call(this);
