// Generated by CoffeeScript 1.8.0
(function() {
  angular.module("worldsheet").directive("itemEditorPro", [
    "Alert", "Album", "Auth", "$upload", "settings", function(Alert, Album, Auth, $upload, settings) {
      return {
        restrict: "E",
        templateUrl: "/static/app/scripts/components/item-editor-pro/item-editor-pro.html",
        scope: {
          item: "=item"
        },
        link: function(scope) {
          scope.show_more = false;
          $('textarea').autosize();
          scope.layout = {
            uploading: false,
            upload_progress: 0
          };
          scope.$watch("files", function() {
            if (scope.files) {
              scope.uploading = true;
              return scope.upload = $upload.upload({
                url: "/app/images/",
                data: {
                  owner: Auth.get_profile().id
                },
                file: scope.files
              }).progress(function(evt) {
                console.log("progress: " + parseInt(100.0 * evt.loaded / evt.total) + "% file :" + evt.config.file.name);
                scope.layout.upload_progress = parseInt(100.0 * evt.loaded / evt.total);
              }).then(function(response) {
                var item, url_abs, url_rel;
                console.log("response = ", response);
                url_rel = response.data.url;
                url_abs = "" + settings.UPLOADED_URL + url_rel;
                item = scope.item;
                if (!item.pic) {
                  item.pic = url_abs;
                }
                item.images.push(response.data);
                scope.save(item);
                return scope.layout.uploading = false;
              }, function() {
                scope.layout.uploading = false;
                return Alert.show_error("There was problem uploading your file. Please make sure your file is a valid image file.");
              });
            }
          });
          scope.save = function(item) {
            var success_handler, tag, tags, tags_private;
            success_handler = function(item) {
              item.expanded = false;
              item.new_status = "";
              return item.is_new = false;
            };
            tags = [
              (function() {
                var _i, _len, _ref, _results;
                _ref = item.tags_input;
                _results = [];
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  tag = _ref[_i];
                  _results.push(tag.text);
                }
                return _results;
              })()
            ][0].join(",");
            tags_private = [
              (function() {
                var _i, _len, _ref, _results;
                _ref = item.tags_private_input;
                _results = [];
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  tag = _ref[_i];
                  _results.push(tag.text);
                }
                return _results;
              })()
            ][0].join(",");
            item.tags = tags;
            item.tags_private = tags_private;
            return item.save(success_handler).$asPromise();
          };
          return scope.expand = function(item) {
            if (item.expanded !== true) {
              console.log("expand");
              item.expanded = true;
            } else {
              console.log("fold");
              item.expanded = false;
            }
          };
        }
      };
    }
  ]).directive("itemEditorProTitle", function() {
    return {
      restrict: "E",
      templateUrl: "/static/app/scripts/components/item-editor-pro/item-editor-pro-title.html"
    };
  }).directive("itemEditorProBasics", [
    "Album", "Alert", function(Album, Alert) {
      return {
        restrict: "E",
        templateUrl: "/static/app/scripts/components/item-editor-pro/item-editor-pro-basics.html",
        link: function(scope) {
          return scope.get_albums = function(item) {
            Alert.show_msg("Downloading your albums ...");
            return Album.get_albums().then(function(response) {
              if (response) {
                item.pic = response;
                return item.save();
              }
            });
          };
        }
      };
    }
  ]).directive("itemEditorProMore", [
    "Auth", function(Auth) {
      return {
        restrict: "E",
        templateUrl: "/static/app/scripts/components/item-editor-pro/item-editor-pro-more.html",
        link: function(scope) {
          scope.set_as_ordering = function(field) {
            var new_ordering_field, ordering_fields, profile;
            profile = Auth.get_profile();
            ordering_fields = profile.ordering_fields;
            new_ordering_field = {
              "title": field.title,
              "model_name": field.model_name
            };
            if (!_.find(ordering_fields, new_ordering_field)) {
              ordering_fields.push(new_ordering_field);
            }
            return profile.save();
          };
          return scope.open = function($event) {
            $event.preventDefault();
            $event.stopPropagation();
            return scope.datepicker_opened = true;
          };
        }
      };
    }
  ]).directive("itemFieldEditMenu", function() {
    return {
      restrict: "E",
      templateUrl: "/static/app/scripts/components/item-editor-pro/item-field-edit-menu.html"
    };
  }).directive("customizedFieldTitle", function() {
    return {
      restrict: "E",
      templateUrl: "/static/app/scripts/components/item-editor-pro/customized-field-title.html",
      link: function(scope, element, attrs) {
        return console.log("customizedFieldTitle");
      }
    };
  });

}).call(this);
