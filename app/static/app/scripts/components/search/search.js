// Generated by CoffeeScript 1.8.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  angular.module("continue").controller("SearchResultsCtrl", [
    "$scope", "Post", "Alert", "InfiniteScroll", function($scope, Post, Alert, InfiniteScroll) {
      var infinite_scroll_posts;
      $scope.scroll_to_post = function(id) {
        var top;
        console.log(id);
        top = $("#post-" + id).offset().top;
        $("html, body").animate({
          scrollTop: top - 100
        });
        return true;
      };
      $scope.layout = {
        loading: {
          posts: false
        }
      };
      infinite_scroll_posts = new InfiniteScroll(Post);
      return $scope.load_posts = function() {
        $scope.layout.loading.posts = true;
        infinite_scroll_posts.config({
          model_types: ["Post"],
          init_starts: $scope.init_post_num,
          extra_params: {
            q: $scope.q,
            tags: $scope.tags,
            areas: $scope.areas,
            secret_key: $scope.secret_key
          }
        });
        $scope.posts = infinite_scroll_posts.load($scope.posts);
        return $scope.posts.$asPromise().then(function(response) {
          infinite_scroll_posts.success_handler(response);
          return $scope.layout.loading.posts = false;
        }, function() {
          return Alert.show_msg("All posts are downloaded ...");
        });
      };
    }
  ]).directive("itemOverview", function() {
    return {
      restrict: "A",
      scope: true,
      link: function(scope, element, attrs) {
        scope.item_id = attrs['itemId'];
        return scope.add_item = function() {
          var _ref;
          if (!(_ref = scope.item_id, __indexOf.call(scope.items, _ref) >= 0)) {
            return scope.items.push(scope.item_id);
          } else {
            return scope.items.splice(scope.items.indexOf(scope.item_id), 1);
          }
        };
      }
    };
  });

}).call(this);
